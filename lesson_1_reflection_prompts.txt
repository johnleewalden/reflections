How did viewing a diff between two versions of a file help you see the bug that
was introduced?

The +s and -s especially helped me distinguish which lines actually had changes.
Because of the +s and -s I was able to find the change in the example almost
instantly despite there being 30/40ish lines of code displayed in the terminal.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Learn from mistakes of previous programmers to see what worked for them or
what didn't work for them.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

You can choose the appropriate time to create a commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

People who use git often have files that are related and needed to be treated
as such.

How can you use the commands git log and git diff to view the history of files?

You type them in the terminal and scroll up and down.

How might using version control make you more confident to make changes that
could break something?

It's easy to go back and check your mistake

Now that you have your workspace set up, what do you want to try using Git for?

Writing code
